machine:
  services:
    - docker
    - mysql
    - postgresql
  node:
    version: 4.0.0
  environment:
    OCI_HOME: /opt/oracle/instantclient
    OCI_LIB_DIR: $OCI_HOME
    OCI_INCLUDE_DIR: $OCI_HOME/sdk/include
    AWS_ACCESS_KEY_ID: AKIAJNJCVLJLCILM2P5Q
    AWS_SECRET_ACCESS_KEY: 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
dependencies:
  post:
    - docker build -t interledger/five-bells-ledger .
test:
  override:
    - scripts/ci.sh "$CIRCLE_NODE_INDEX" "$CIRCLE_NODE_TOTAL":
        parallel: true
deployment:
  production:
    branch: master
    commands:
      - mkdir coverage
      - docker run --name=ledger-test-sqlitetest-it --net=host -e LEDGER_UNIT_DB_URI=sqlite:// -e XUNIT_FILE=coverage/xunit.xml -v "$PWD"/coverage:/usr/src/app/coverage interledger/five-bells-ledger sh -c 'npm test --coverage -- -R spec-xunit-file'
  # Extract test results
      - cp coverage/xunit.xml "${CIRCLE_TEST_REPORTS}/"
      # Upload coverage data
      - docker run --volumes-from ledger-test-sqlite -e COVERALLS_REPO_TOKEN=${COVERALLS_REPO_TOKEN} interledger/five-bells-ledger npm run coveralls
      # Push NPM package if not yet published
      - mv npmrc-env .npmrc
      - if [ -z "$(npm info $(npm ls --depth=-1 2>/dev/null | head -1 | cut -f 1 -d " ") 2>/dev/null)" ] ; then npm publish ; fi
      # Push Docker image tagged latest and tagged with commit descriptor
      - sed "s/<AUTH>/${DOCKER_TOKEN}/" < "dockercfg-template" > ~/.dockercfg
      - docker tag interledger/five-bells-ledger:latest interledger/five-bells-ledger:$(git describe)
      - docker push interledger/five-bells-ledger:latest
      - docker push interledger/five-bells-ledger:$(git describe)
      # Upload API docs to S3
      - npm install -g s3-cli
      - s3-cli sync --delete-removed apidoc-out s3://interledger-docs/five-bells-ledger/latest/apidoc
general:
  artifacts:
    - "coverage/lcov-report"
    - "apidoc-out"
